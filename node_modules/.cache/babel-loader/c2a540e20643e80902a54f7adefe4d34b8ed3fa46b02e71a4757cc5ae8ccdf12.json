{"ast":null,"code":"var _jsxFileName = \"/home/theos/WorkSpace/dashboard-shabak/src/Components/SlashScreen/SplashScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./Splash.css\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Lottie from 'react-lottie';\nimport animationData from '../../Assets/rainbow.json'; // Import your Lottie animation JSON\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplashScreen = () => {\n  _s();\n  const [animationLoaded, setAnimationLoaded] = useState(false);\n  useEffect(() => {\n    // Simulate loading time\n    setTimeout(() => {\n      setAnimationLoaded(true);\n    }, 2000); // Adjust the time as needed\n  }, []);\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"splash-screen\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"h-100\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"d-flex align-items-center justify-content-center\",\n        children: animationLoaded ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Lottie, {\n          options: defaultOptions,\n          width: 500,\n          height: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(SplashScreen, \"VAFz26zeLdDIBC69a6WU5PTvYaY=\");\n_c = SplashScreen;\nexport default SplashScreen;\nvar _c;\n$RefreshReg$(_c, \"SplashScreen\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Lottie","animationData","jsxDEV","_jsxDEV","SplashScreen","_s","animationLoaded","setAnimationLoaded","setTimeout","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","width","height","_c","$RefreshReg$"],"sources":["/home/theos/WorkSpace/dashboard-shabak/src/Components/SlashScreen/SplashScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./Splash.css\"\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Lottie from 'react-lottie';\nimport animationData from '../../Assets/rainbow.json'; // Import your Lottie animation JSON\n\nconst SplashScreen = () => {\n  const [animationLoaded, setAnimationLoaded] = useState(false);\n\n  useEffect(() => {\n    \n    // Simulate loading time\n    setTimeout(() => {\n      setAnimationLoaded(true);\n    }, 2000); // Adjust the time as needed\n  }, []);\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\n  return (\n    <Container fluid className=\"splash-screen\">\n      <Row className=\"h-100\">\n        <Col className=\"d-flex align-items-center justify-content-center\">\n          {animationLoaded ? (\n            <h1>Loading ...</h1>\n          ) : (\n            <Lottie options={defaultOptions} width={500} height={500} />\n            \n          )}\n           \n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SplashScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AACrB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,aAAa,MAAM,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7DD,SAAS,CAAC,MAAM;IAEd;IACAa,UAAU,CAAC,MAAM;MACfD,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,cAAc,GAAG;IACrBC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdV,aAAa,EAAEA,aAAa;IAC5BW,gBAAgB,EAAE;MAChBC,mBAAmB,EAAE;IACvB;EACF,CAAC;EAED,oBACEV,OAAA,CAACN,SAAS;IAACiB,KAAK;IAACC,SAAS,EAAC,eAAe;IAAAC,QAAA,eACxCb,OAAA,CAACL,GAAG;MAACiB,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBb,OAAA,CAACJ,GAAG;QAACgB,SAAS,EAAC,kDAAkD;QAAAC,QAAA,EAC9DV,eAAe,gBACdH,OAAA;UAAAa,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAEpBjB,OAAA,CAACH,MAAM;UAACqB,OAAO,EAAEZ,cAAe;UAACa,KAAK,EAAE,GAAI;UAACC,MAAM,EAAE;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAE5D;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACf,EAAA,CAnCID,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}